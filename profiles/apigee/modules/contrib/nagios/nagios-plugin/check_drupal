#!/bin/bash
#
# Drupal monitoring plugin for Nagios
#
# Requires a Drupal module from http://drupal.org/project/nagios
#
# Copyright 2009 Khalid Baheyeldin http://2bits.com
#
ECHO="/bin/echo"
GREP="/bin/egrep"
RM="/bin/rm"
WGET="/usr/bin/wget"
SSL=/bin/false

PROGRAM_NAME=`basename "$0"`
PROGRAM_PATH=`echo "$0" | sed -e 's,[\\/][^\\/][^\\/]*$,,'`

# shellcheck disable=SC2016
REVISION=`echo '$Revision$' | sed -e 's/[^0-9.]//g'`

temp=`mktemp`

if [[ -e $PROGRAM_PATH/utils.sh ]]; then
  . "$PROGRAM_PATH/utils.sh"
elif [[ -e /usr/lib/nagios/plugins/utils.sh ]]; then
  . /usr/lib/nagios/plugins/utils.sh
elif [[ -e /usr/local/nagios/libexec/utils.sh ]]; then
  . /usr/local/nagios/libexec/utils.sh
else
  echo 'Could not find nagios utils include file! Set PROGRAM_PATH on line 17 of the check_drupal script.'
  exit 1
fi

print_usage() {
  $ECHO "Usage:"
  $ECHO "  $PROGRAM_NAME -U unique_id [ -H host_name ] [ -S ] [ -P path_to_nagios_status_page ] [ -t time_out_seconds ] [ --http-user user --http-password password ]"
  $ECHO "  $PROGRAM_NAME --help"
  $ECHO "  $PROGRAM_NAME --version"
}

print_help() {
  print_revision "$PROGRAM_NAME" "$REVISION"
  $ECHO ""
  print_usage
  $ECHO ""
  $ECHO "Drupal monitoring plugin for Nagios"
  $ECHO ""
  $ECHO "  -U   The secret user agent from the Nagios settings page within Drupal."
  $ECHO "  -H   The domain or IP address under which this script should reach Drupal"
  $ECHO "       with HTTPS . Default: 127.0.0.1."
  $ECHO "  -S   Use HTTPS instead of HTTP."
  $ECHO "  -P   The path of the status page without a leading slash. Default: nagios"
  $ECHO "  -t   Seconds until wget should give up. Default: 2"
  $ECHO ""
  $ECHO "  --http-user user --http-password password"
  $ECHO "       Not the Drupal login, but the HTTP-based basic, digest, or NTLM."
  support
}

# Make sure the correct number of command line
# arguments have been supplied
if [ $# -lt 1 ]; then
  print_usage
  exit "$STATE_UNKNOWN"
fi

# Grab the command line arguments

exit_status=$STATE_WARNING

while test -n "$1"; do
  case "$1" in
    --help|-h)
      print_help
      exit "$STATE_OK"
      ;;
    --version|-V)
      print_revision "$PROGRAM_NAME" "$REVISION"
      exit "$STATE_OK"
      ;;
    -H)
      host_name=$2
      shift
      ;;
    -U)
      unique_id=$2
      shift
      ;;
    -P)
      path=$2
      shift
      ;;
    -S)
      SSL=/bin/true
      ;;
    -t)
      timeout=$2
      shift
      ;;
    --http-user)
      http_user=$2
      shift
      ;;
    --http-password)
      http_password=$2
      shift
      ;;
    *)
      $ECHO "Unknown argument: $1"
      print_usage
      exit "$STATE_UNKNOWN"
  esac
  shift
done

# Set a default for host_name
if [ "$host_name" = "" ]; then
  host_name=$NAGIOS_HOSTADDRESS
fi
if [ "$host_name" = "" ]; then
  host_name=127.0.0.1
fi

# Set a default for "Nagios page path" - this must match your Drupal settings at /admin/config/system/nagios
if [ "$path" = "" ]; then
  path="nagios"
fi

# Set the default for timeout
if [ "$timeout" = "" ]; then
  timeout=2
fi

# Set the default for timeout
if [ "$unique_id" = "" ]; then
  unique_id="Nagios"
fi


if $SSL; then
  CMD="$WGET --no-check-certificate -S -T $timeout -O - --http-user=$http_user --http-password=$http_password -U $unique_id https://$host_name/$path"
else
  CMD="$WGET -S -T $timeout -O - --http-user=$http_user --http-password=$http_password -U $unique_id http://$host_name/$path"
fi

$CMD > "$temp" 2>&1
RC=$?

# When using http authentication wget always waits until it receives a 401 before sending the password.
# Therefore the first header should be stripped off
if [ "$http_password" != "" ]; then
  ex -s +"g/HTTP\/1.1 401/d" -cwq "$temp"
fi

HTTP=`$GREP "HTTP/1" "$temp"`

if [ "$RC" != 0 ]; then
  $ECHO "wget error: $RC: when accessing $host_name/$path. HTTP: $HTTP"
  $RM "$temp"
  exit "$STATE_UNKNOWN"
fi

HTTP_CODE=`$ECHO "$HTTP" | awk '{print $2}'`
if [ "$HTTP_CODE" != "200" ]; then
  $ECHO "HTTP returned an error code. HTTP: $HTTP"
  $RM "$temp"
  exit "$STATE_UNKNOWN"
fi

DATA="`$GREP "nagios=" "$temp" | sed -e 's/^.*nagios=//g'`"

STATUS=`$ECHO "$DATA" | awk -F, '{print $1}'`

case $STATUS in
"OK")
  exit_status=$STATE_OK
  ;;
"WARNING")
  exit_status=$STATE_WARNING
  ;;
"UNAUTHORIZED")
  exit_status=$STATE_CRITICAL
  ;;
"CRITICAL")
  exit_status=$STATE_CRITICAL
  ;;
*)
  exit_status=$STATE_UNKNOWN
  ;;
esac

# Send the data
$ECHO "DRUPAL $DATA"

$RM "$temp"

exit "$exit_status"
